rhs-header {

  $rhs-header-user-min-width: 100px;

  @extend %rs-typo-04;

  // Is a flex (root) container and is not itself a flexitem
  display: flex;
  //Stretch on cross-axis to make items 100% height
  align-items: stretch;
  justify-content: space-between;
  background-color: $rs-color-28;
  color: $rs-color-01;
  height: 80px;

  i.fa {
    font-size: 24px;
    margin-right: 7px;
  }

  a {
    @extend %rs-typo-06;
    color: $rs-color-02;

    &:hover,
    &:active {
      color: $rs-color-02;
    }
  }

  .header-user,
  .header-links,
  .header-logo{
    //Act as a flex horizontal container
    display: flex;
    //where its items are vertically centered..
    align-items: center;
    white-space: nowrap;
  }

  .header-user,
  .header-links .header-link,
  .header-logo{
    padding: 0 16px;
  }

  .header-empty{
    flex: 1 1 auto;
  }


  .header-logo {
    flex: 1;
    min-width: 172px;
    max-width: 172px;
    background-color: $rs-color-29;

    img {
      height: 30px;
    }

    @media (max-width: $screen-xs-max) {
      min-width: 62px;
      max-width: 62px;
    }
  }

  .header-user {
    //default for this directive is to act as a non-growing, (aggressivly) shrinkable flex-item
    flex: 0 3 auto;

    //flex items must a some sort of width applied for it to be able to shrink
    //NOTE: when using min-width:0px (no unit), scss processing optimised it by
    // removing the unit, casuing rendering errorss in IE that doesnt handle unitless min-widths in flex context. took me 6 hours to find that ugh!
    min-width: $rhs-header-user-min-width;
  }

  .header-two-row {
    display: flex;
    flex: 0 1 auto;
    min-width: 1px;


    @media (max-width: $screen-xs-max) {
      flex-direction: column;
    }
  }

  .header-links {
    //default is to act as a growing, shrinkable flex-item, taking excessive widths
    flex: 1 1 auto;
    //push all items to the right
    justify-content: flex-end;
    padding-right: 25px;

    .header-link{
      display: flex;
      align-items: center;
      height: 100%;
      margin: 0;

      &:first-of-type {
        border-left: 0;
      }

      &:last-of-type {
        border-right: 0;
        padding-right: 0;
      }
    }
  }

  .header-link {
    margin-left: 10px;
  }

  //Override bootstraps default dropdown for this context
  .dropdown-menu {
    min-width: 0;
    position: relative;
    padding: 20px 0;
    left: 0;
    bottom: 0;
    width: 100%;
    background-clip: border-box;
    background-color: $rs-color-04;

    margin: 0;
    border-radius: 0;
    border-width: 0 6px;
    border-style: solid;
    border-color: transparent;
    border-image: none;

    > li > a {
      @extend %rs-typo-06;
      color: $rs-color-02;
      text-decoration: none;
      &:focus, &:hover {
        background-color: $rs-color-04;
        color: $rs-color-02;
        text-decoration: underline;
      }
    }
  }


  .header-divider{
    border-width: 0 6px;
    border-style: solid;
    //border-image-source: url('/assets/images/divider-border.png');
    border-image-slice: 0 50%;
    border-image-repeat: round;
    border-image-source: linear-gradient(to right, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.01) 45%, rgba(0, 0, 0, 0.01) 55%, rgba(0, 0, 0, 0.08) 100%);
  }
}
